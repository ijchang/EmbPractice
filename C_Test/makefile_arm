CC=arm-none-eabi-gcc
MACH=cortex-m4
CFLAGS= -c -g -mcpu=$(MACH) -mthumb -std=gnu11 -Wall -O0 # use '-g' to build DWARF debuggin information into binary code
LDFLAGS= --specs=nano.specs -T stm32_ls.ld -Wl,-Map=final.map #use -Wl to tell 'arm-none-eabi-gcc' that -Map=final.map is a linker command, which is supposed to be used with arm-none-eabi-ld. The --spec=nano.specs will link your project with newlib_nano library.in arm-none-eabi tool chain

#all: main.o led.o stm32_startup.o final.elf

clean:
	rm -rf *.o *elf

main.o: main.c
	$(CC) $(CFLAGS) $^ -o $@

#led.o: led.c
#	$(CC) $(CFLAGS) $^ -o $@

#stm32_startup.o: stm32_startup.c
#	$(CC) $(CFLAGS) $^ -o $@

#syscalls.o: syscalls.c
#	$(CC) $(CFLAGS) $^ -o $@

#final.elf: main.o led.o stm32_startup.o syscalls.o
#	$(CC) $(LDFLAGS) -o $@ $^ # $@ evaluates to final.elf; $^ evaluates to main.o, led.o, and stm32_startup.o
